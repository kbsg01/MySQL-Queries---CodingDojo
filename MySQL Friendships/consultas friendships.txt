0.escribe una consulta SQL que devuelva una lista de usuarios junto con los nombres de sus amigos.

SELECT 
	* 
FROM 
	friendships;
SELECT 
	users.first_name, users.last_name, users2.first_name as friend_first_name, users2.last_name as friend_last_name 
FROM 
	users
JOIN 
	friendships ON users.id = friendships.user_id
LEFT JOIN 
	users as users2 ON users2.id = friendships.friend_id;

___________

1. Devuelva a todos los usuarios que son amigos de Kermit, asegúrese de que sus nombres se muestren en los resultados.
    
    SELECT
    	users.id, users.first_name, users.last_name
    FROM
    	users
    WHERE
    	users.first_name = "kermit"
    AND
    	users.last_name = "the frog";
        
    SELECT 
    	* 
    FROM
    	friendships
    JOIN 
    	users ON friendships.user_id = users.id
    WHERE
    	friend_id = 4;
___________
    
2. Devuelve el recuento de todas las amistades.
    
   
    SELECT
    	COUNT(friendships.friend_id)
    FROM
    	friendships;
	
  ___________
    
3. Descubre quién tiene más amigos y devuelve el recuento de sus amigos.
    
 
    SELECT 
        users.id,
        users.first_name,
        users.last_name,
        friendships.user_id,
        COUNT(friendships.friend_id) AS recuento_amistades
    FROM
        users
            JOIN
        friendships ON users.id = friendships.user_id
    GROUP BY users.id;
  
 ___________
    
4. Crea un nuevo usuario y hazlos amigos de Eli Byers, Kermit The Frog y Marky Mark.
    
    INSERT INTO 
    	users
    	(first_name, last_name, created_at, updated_at)
    VALUES ("Jane", "Doe", NOW());
    
    INSERT INTO 
    	friendships
        (user_id, friend_id, created_at)
    VALUES (6, 2, NOW()), (6, 4, NOW()), (6, 5, NOW());

___________
    
5. Devuelve a los amigos de Eli en orden alfabético.

    SELECT 
        users.first_name, users.last_name, users2.first_name AS friend_first_name, users2.last_name AS friend_last_name
    FROM
        users
    JOIN
        friendships ON users.id = friendships.user_id
    LEFT JOIN
        users AS users2 ON users2.id = friendships.friend_id
    WHERE
    	users.first_name = "Eli"
        AND
    		users.last_name = "Byers"
    		OR
    			users2.id = 2
    ORDER BY users2.first_name;

___________
    
6. Eliminar a Marky Mark de los amigos de Eli.
    

    DELETE FROM friendships
    WHERE user_id = 2
    	AND 
    		friend_id = 5;

___________
    
7. Devuelve todas las amistades, mostrando solo el nombre y apellido de ambos amigos

    SELECT 
        users.first_name, users.last_name, users2.first_name AS friend_first_name, users2.last_name AS friend_last_name
    FROM
        users
    JOIN
        friendships ON users.id = friendships.user_id
    LEFT JOIN
        users AS users2 ON users2.id = friendships.friend_id;
 

